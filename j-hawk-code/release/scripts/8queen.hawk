
function main()
{
         var x[] = new var[]
         
         var N = 8
         for(var i=0;i<N;i=i+1)
         {
            x[i] = 0
         }
	 exec callplaceNqueens(x)
}


 function  canPlaceQueen(var r, var c,var x[]) 
{       
        echon  " for r="+r+ " , c="+c
        
         if(r ==5 && c == 7)
         {
             
            echo "debug"
         }

        /**
         * Returns TRUE if a queen can be placed in row r and column c.
         * Otherwise it returns FALSE. x[] is a global array whose first (r-1)
         * values have been set.
         */
        for (var i = 0; i < r; i = i+1) 
        {
            if (x[i] == c || ( (i - r) == (x[i] - c) ) || ( (i - r) == (c - x[i]) )) 
            {
                echo "returning false"
                return 0
               
            }
        }
        echo "returning true"
        return 1
        
}

function printQueens(var  x [] ) 
{
        echo "called"
 
        var N = `exec length(x)`

        for (var i = 0; i < N; i = i+1) 
        {
            for (var j = 0; j < N; j = j+1) 
            {
                if (x[i] == j) 
                {
                    > Q  
                } 
                else 
                {
                    > * 
                }
            }
            echo " "
        }
        echo " "
   
    }

    function placeNqueens(var r, var n,var x[]) 
    {
        
        

        /**
         * Using backtracking this method prints all possible placements of n
         * queens on an n x n chessboard so that they are non-attacking.
         */
        for (var c = 0; c < n; c = c+1) 
        {
           
            if ( `exec canPlaceQueen(r, c,x)` ==1) 
            {
                x[r] = c 
//                exec showX(x)
                 echon  " for r="+r
                if (r ==  (n - 1 ) ) 
                {
                    echon " calling "   
                    exec printQueens(x)
                } 
                else 
                {
                     echon  " calling placeNqueens"
                    exec placeNqueens(r + 1, n,x)
                }
            }
             
            
         
            
        }
          echon  " again for r="+r 
            echo "lastpoint"
    }
    function showX(var x[])
    {
        for(var i=0;i<`exec length(x)`;i =i+1)
            {
                echon x[i]+","
            }
    }
    function callplaceNqueens(var x[]) 
    {
        exec placeNqueens(0, `exec length(x)`,x)
        
    }


